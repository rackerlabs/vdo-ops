import socket
import ssl

from mock import Mock, mock


def test_get_ssl_thumbprint(get_handler):
    util = get_handler("common.utils.util")

    socket_mock = Mock()
    wrap_socket_mock = Mock()

    with mock.patch.object(
        socket, "socket", return_value=socket_mock
    ), mock.patch.object(ssl, "wrap_socket", return_value=wrap_socket_mock):
        wrap_socket_mock.getpeercert.return_value = __test_der_cert_bin

        actual = util.get_ssl_thumbprint("23.204.77.80")

        assert actual == "35:B7:03:59:30:C7:0B:3B:66:6C:F0:FD:33:D0:07:60:14:17:30:CE"


def test_unique_list(get_handler):
    util = get_handler("common.utils.util")

    obj_1 = TestObject("1")
    obj_2 = TestObject("2")

    assert util.unique_list([obj_1, obj_2, obj_1, obj_1], "id") == [obj_1, obj_2]


class TestObject:
    def __init__(self, id) -> None:
        self.id = id


__test_der_cert_bin = (
    b"0\x82\x07J0\x82\x062\xa0\x03\x02\x01\x02\x02\x10,"
    b"T\x00\xa4\x86g4\xaf\x00\x00\x00\x00P\xf6\xca\xf50\r\x06\t"
    b"*\x86H\x86\xf7"
    b"\r\x01\x01\x0b\x05\x000\x81\xba1\x0b0\t\x06\x03U\x04\x06\x13"
    b"\x02US1"
    b"\x160\x14\x06\x03U\x04\n\x13\rEntrust, Inc.1("
    b"0&\x06\x03U\x04\x0b\x13\x1fSee "
    b"www.entrust.net/legal-terms1907\x06\x03U\x04\x0b\x130(c) 2012 "
    b""
    b"Entrust, "
    b"Inc. - for authorized use only1.0,"
    b"\x06\x03U\x04\x03\x13%Entrust "
    b"Certification Authority - "
    b"L1K0\x1e\x17\r190904191817Z\x17\r210904194816Z0n1\x0b0\t\x06"
    b"\x03U\x04"
    b"\x06\x13\x02US1\x110\x0f\x06\x03U\x04\x08\x13\x08Michigan1"
    b"\x100\x0e\x06"
    b"\x03U\x04\x07\x13\x07Detroit1\x1d0\x1b\x06\x03U\x04\n\x13"
    b"\x14Ally "
    b"Financial, "
    b"Inc.1\x1b0\x19\x06\x03U\x04\x03\x13\x12secureapi.ally.com0"
    b'\x82\x01"0\r\x06\t*\x86H\x86\xf7\r\x01\x01\x01\x05\x00\x03'
    b"\x82\x01\x0f"
    b"\x000\x82\x01\n\x02\x82\x01\x01\x00\xd0\x0e\xfaf0i|`zJz\xe7"
    b"\xb1.\xc4"
    b'\x8d\xba\x15\x1c+3eI\xa9\x16~\xe9\x1f\x7f\xa5\xcc"9l~\xb0u'
    b"\xaa\xda\x8aq"
    b"\xd3\xe9\xed\x86z\xcf\x14\xea\xd7\xd2\r\x02MG>#\xb3N\xe3&>7"
    b"\x9f\x8b\xe1"
    b"\x84\xa3\xaf\xbb\x1e\x8f\x88\xf0\xe83\xb1\xbf,"
    b"\xc0\x98@\xd3*\xe9@{"
    b"\r!n\xcd)\xcf\x92\xdf\xbd.\xe7\x98\x88B\xd4\x95\xb8S\xdf\x17"
    b"\xa0\nV\xb9"
    b"\x83H\x8c@t\x82\xa9\xa4\x14\xa6\t\xccz\xd1\xaf\x01\x9a\xaf>e"
    b"\xfe\x88"
    b"\xc6I\x90I\x1b.5p\x9b\x1d>\xba\xa5\xa1\xee5#;\xbaN\xe5/\t\x9c"
    b"\xf5\xa6"
    b"\xfc\x05\xce+\x9b\xdbS_\xef{"
    b"9\xff.Po\x966\xdc!\xbf\x88\x02a2O\x13r\xf6\x90\x9a\xff\x1c"
    b"\xb4\x99\xc5"
    b"\xb4\x93q6\xddf7\x90%\xfb\x08J\xe5\x00\x843#t\xfd\x07K\xda"
    b"\xf7B_\x0c"
    b"\x00}\x93\xef\xa4W\xcf\x9b("
    b"\x91~\xd5V\xf8\x91e`\\X\x9e\x1e7\xf3\xcaZ\xa5\xd5\x9b\x99\xd5"
    b"\xfefr\x07"
    b"\xad)\x02\x03\x01\x00\x01\xa3\x82\x03\x950\x82\x03\x9101\x06"
    b"\x03U\x1d"
    b"\x11\x04*0("
    b"\x82\x12secureapi.ally.com\x82\x12auto-api1.ally.com0\x82"
    b"\x01\xf4\x06\n+\x06\x01\x04\x01\xd6y\x02\x04\x02\x04\x82\x01"
    b"\xe4\x04"
    b"\x82\x01\xe0\x01\xde\x00u\x00U\x81\xd4\xc2\x16\x906\x01J\xea"
    b"\x0b\x9bW<S"
    b"\xf0\xc0\xe48xp%\x08\x17/\xa3\xaa\x1d\x07\x13\xd3\x0c\x00\x00"
    b"\x01l\xfd"
    b"\xd2\x12\xcc\x00\x00\x04\x03\x00F0D\x02 \x10\xa6I["
    b"\xdf6\x03\xc0V=\x98n\xcd\x14\xf1\xc5G1\xc9\xdb&4\xfb\x87>\x8b"
    b"^\xe0\xb6"
    b"\x89\xe8\xfa\x02 "
    b"KBE\x95\x92\x82\xe4\x08@\x99n.\xd1\x07\xa9\x0f\xa9Y9v"
    b"\x02\xa5\x81t\xfc\xd3X\xe4\xf6\xb7\xf7Z\x00v\x00D\x94e.\xb0"
    b"\xee\xce\xaf"
    b"\xc4@\x07\xd8\xa8\xfe("
    b"\xc0\xda\xe6\x82\xbe\xd8\xcb1\xb5?\xd33\x96\xb5\xb6\x81\xa8"
    b"\x00\x00"
    b"\x01l\xfd\xd2\x12\xc0\x00\x00\x04\x03\x00G0E\x02 "
    b"~\x14\x12\xe8\xee\xd9\xc4\xd3\x0fH\xa4\xab\x9cre\x05\xe2\x07"
    b"\xafR\xd6"
    b"\xfd\xa3=\x94\x93\x0f["
    b"\xd9\x84\x95\xca\x02!\x00\xd5\xec\x99\xc2F\xe7\xea\xa6\x99h"
    b"\xddw\xda"
    b"\xe1d\x0e\xf1\xab\xecd\xf6\tL4y\xbd\xdb\xd8\x9a\x1f\xbb\xf4"
    b"\x00u\x00oSv"
    b"\xac1\xf01\x19\xd8\x99\x00\xa4Q\x15\xffw\x15\x1c\x11\xd9\x02"
    b"\xc1\x00"
    b")\x06\x8d\xb2\x08\x9a7\xd9\x13\x00\x00\x01l\xfd\xd2\x13\xfc"
    b"\x00\x00\x04"
    b"\x03\x00F0D\x02 "
    b"v\xa7\xa9D\x9b\xfe\x88\x16\x9e\xebMk\xf2\xe8\x0e:\xcf"
    b"\xfc\x8b\x19\x02\xf0\xad\xe8\\3\xd1\x99\x1c\x93\xc6\xfe\x02 "
    b"\"\x1c\xdf\x80\x86Cn\xc0\x9c\x98L\xdc\xf0\xb9\xdbHJ'\xbf}\t"
    b"\xcd\xbd\xdc"
    b'\xa0\x85c\x8f\xbez)\xe8\x00v\x00\xf6\\\x94/\xd1w0"\x14T\x18'
    b"\x080\x94V"
    b"\x8e\xe3M\x13\x193\xbf\xdf\x0c/ "
    b"\x0b\xccN\xf1d\xe3\x00\x00\x01l\xfd\xd2\x12\x9f\x00\x00\x04"
    b"\x03\x00G0E"
    b"\x02!\x00\xb1\x88\x81qLe\xc3\xe0l\xaaj\xb5\xc1\xa0\xffT\xd2"
    b"\xeb\x83"
    b".\xfeX?O\x89\x93\xf4%OY\xc6\xa7\x02 "
    b"\\\xf4\xc4\xba\x05:7J&\x05~\x86\x19\xb0\xa3pj\xbc\xa1`\x9d"
    b"\xa9\x03"
    b"!\xf603C%\xa5n<0\x0e\x06\x03U\x1d\x0f\x01\x01\xff\x04\x04\x03"
    b"\x02\x05"
    b"\xa00\x1d\x06\x03U\x1d%\x04\x160\x14\x06\x08+\x06\x01\x05\x05"
    b"\x07\x03"
    b"\x01\x06\x08+\x06\x01\x05\x05\x07\x03\x0203\x06\x03U\x1d\x1f"
    b"\x04,"
    b'0*0(\xa0&\xa0$\x86"http://crl.entrust.net/level1k.crl0K\x06'
    b"\x03U\x1d "
    b"\x04D0B06\x06\n`\x86H\x01\x86\xfal\n\x01\x050("
    b"0&\x06\x08+\x06\x01\x05\x05\x07\x02\x01\x16\x1ahttp://www"
    b".entrust.net"
    b"/rpa0\x08\x06\x06g\x81\x0c\x01\x02\x020h\x06\x08+\x06\x01\x05"
    b"\x05\x07"
    b"\x01\x01\x04\\0Z0#\x06\x08+\x06\x01\x05\x05\x070\x01\x86"
    b"\x17http://ocsp"
    b".entrust.net03\x06\x08+\x06\x01\x05\x05\x070\x02\x86'http"
    b"://aia"
    b".entrust.net/l1k-chain256.cer0\x1f\x06\x03U\x1d#\x04\x180\x16"
    b"\x80\x14"
    b"\x82\xa2pt\xdd\xbcS?\xcf{"
    b"\xd4\xf7\xcd\x7f\xa7`\xc6\nL\xbf0\x1d\x06\x03U\x1d\x0e\x04"
    b"\x16\x04\x14"
    b"\xb3L?(\x87L\xc8\xdfm;\xd6E\xc7c\xbd\xc3\xf95\xd050\t\x06"
    b"\x03U\x1d\x13"
    b"\x04\x020\x000\r\x06\t*\x86H\x86\xf7\r\x01\x01\x0b\x05\x00"
    b"\x03\x82\x01"
    b"\x01\x006\xe6\x18\xb5\xc5\x9d\xf4\xc9\x19\xfa\xdd\xdc\xd6"
    b"\x9fd\x9b\xef"
    b"\xd1\xeb\xb6D<~\x06\xe45\x01E\xbf\xd9\xbb\x88w;=\x1a\n\xcc{"
    b"\xaf\x8e\xf3\x07T8\xcc\\X1\xfa\x11\xb3D\xad\t\x97Ga\x13\xc3Bb"
    b"\x12\x9d"
    b'*LR\x9a\x07\x17"oe3\xc5\xc9\xfd\x07;t\x02\xb9\x8b\x96D\x15W'
    b"\xb5M\xa7"
    b"\xec\xdc\x82\xd5\xaa\x9e1\x87\x03C\xc8\xa5\xd7\xe6A\x06\xc3"
    b"\xb3VZS\xaa0"
    b"\xc1\x85|X\xcb\xb5\xd3\xcf\x86\n\x13\x85\x8f\x06&\xae["
    b"0\xb0\x18}\xa2p\x1c\xb9oz\xab\xe8a\x9e\x14m3\xa9vuB\xed\xaa"
    b"\xfcS\xcc"
    b"\xff^\x9c\x96\xc4:\xb3\xb3S`\xea$\x86\xd8?\xcd\x9b9\rS\xea"
    b"\x83\xb3M\x88"
    b"+|\xaa\xe9\x00\xed\xe8\x0e\\\xd4\xf7\xe0T\xe0\xcb\xd7("
    b"\xf9\xd3\xe5\xfcw\x0e\xbc\xd8("
    b"\x96\xc1\xb3r\xc1\x17$\x01!\xe0\x1c\x0b\xd1p\x98v`\x135\xd6"
    b"\xcd\xd6"
    b"\x91u\x1d\xba\x8c\x99\xc0\x8e\xa4%\xd5\xbf\xfd\xddcF\xe8\xae"
    b"\x9c\xcbgZN"
    b"\x91\xa6\n\xf2"
)
